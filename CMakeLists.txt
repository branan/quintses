PROJECT(QUINTSES)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${quintses_SOURCE_DIR}/cmake)
IF(CMAKE_COMPILER_IS_GNUCXX)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Werror")
ENDIF(CMAKE_COMPILER_IS_GNUCXX)
IF(MSVC)
    ADD_DEFINITIONS("-D_CRT_SECURE_NO_WARNINGS")
    ADD_DEFINITIONS("-DNOMINMAX")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Wall /WX")
ENDIF(MSVC)
SET(BUILD_SHARED_LIBS OFF)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/3rdparty)

IF(WIN32)
  SET(QNT_PLATFORM "w32")
ELSE(WIN32)
  SET(QNT_PLATFORM "x11")
ENDIF(WIN32)

ADD_SUBDIRECTORY(core)
ADD_SUBDIRECTORY(server)
ADD_SUBDIRECTORY(client)
ADD_SUBDIRECTORY(3rdparty)

ADD_EXECUTABLE(quintses quintses.cpp)
ADD_EXECUTABLE(qntsrv qntsrv.cpp)
ADD_EXECUTABLE(qntcli qntcli.cpp)

TARGET_LINK_LIBRARIES(quintses qntcore qntserver qntclient qntglew)
TARGET_LINK_LIBRARIES(qntsrv qntcore qntserver)
TARGET_LINK_LIBRARIES(qntcli qntcore qntclient qntglew)
